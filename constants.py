# ::: Method ::: ================================================== #
# Calculated using:                                                 #
#   [ cube_root_fraction_of (prime) for prime in get_n_primes(64) ] #
# ================================================================= #
list_of_ks = [
    (k00 := 1116352408), (k01 := 1899447441), (k02 := 3049323471), (k03 := 3921009573),
    (k04 :=  961987163), (k05 := 1508970993), (k06 := 2453635748), (k07 := 2870763221),
    (k08 := 3624381080), (k09 :=  310598401), (k10 :=  607225278), (k11 := 1426881987),
    (k12 := 1925078388), (k13 := 2162078206), (k14 := 2614888103), (k15 := 3248222580),
    (k16 := 3835390401), (k17 := 4022224774), (k18 :=  264347078), (k19 :=  604807628),
    (k20 :=  770255983), (k21 := 1249150122), (k22 := 1555081692), (k23 := 1996064986),
    (k24 := 2554220882), (k25 := 2821834349), (k26 := 2952996808), (k27 := 3210313671),
    (k28 := 3336571891), (k29 := 3584528711), (k30 :=  113926993), (k31 :=  338241895),
    (k32 :=  666307205), (k33 :=  773529912), (k34 := 1294757372), (k35 := 1396182291),
    (k36 := 1695183700), (k37 := 1986661051), (k38 := 2177026350), (k39 := 2456956037),
    (k40 := 2730485921), (k41 := 2820302411), (k42 := 3259730800), (k43 := 3345764771),
    (k44 := 3516065817), (k45 := 3600352804), (k46 := 4094571909), (k47 :=  275423344),
    (k48 :=  430227734), (k49 :=  506948616), (k50 :=  659060556), (k51 :=  883997877),
    (k52 :=  958139571), (k53 := 1322822218), (k54 := 1537002063), (k55 := 1747873779),
    (k56 := 1955562222), (k57 := 2024104815), (k58 := 2227730452), (k59 := 2361852424),
    (k60 := 2428436474), (k61 := 2756734187), (k62 := 3204031479), (k63 := 3329325298),
]

# ::: Method ::: =================================================== #
# Calculated using:                                                  #
#   [ square_root_fraction_of (prime) for prime in get_n_primes(8) ] #
# ================================================================== #
class Registers:
    a = 1779033703
    b = 3144134277
    c = 1013904242
    d = 2773480762
    e = 1359893119
    f = 2600822924
    g =  528734635
    h = 1541459225

class Of:
    a, b, c, d = 0, 1, 2, 3
    e, f, g, h = 4, 5, 6, 7

# ::: Auxiliar Functions ::: ====================================== #
# Functions used to compute the constants of the SHA-256 algorithm. #
# ================================================================= #
TWO_TO_THE_THIRTY_TWO = 4294967296 # 2 ** 32 | 1 << 32

def is_prime(n):
    if n < 1: return False

    for i in range(2, n):
        if n % i == 0: return False

    return True

def get_n_primes(n):
    primes  = [ ]
    n_prime =  2

    while len(primes) < n:
        if is_prime(n_prime) : primes.append(n_prime)
        n_prime += 1

    return primes

def square_root_fraction_of(n):
    root = n ** (1 / 2)
    return int( (root - int (root)) * TWO_TO_THE_THIRTY_TWO )

def cube_root_fraction_of(n):
    root = n ** (1 / 3)
    return int( (root - int (root)) * TWO_TO_THE_THIRTY_TWO )